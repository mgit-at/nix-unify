module shareSystemd || return

proc describe(; ; cfg) {
  d_t "share systemd"
  d_e (cfg)
  var unitsShared = []
  for unit in (cfg.unitsResolved) {
    var frag="$(systemctl show "$unit" -p FragmentPath --value)"
    if ("$(readlink -f "$frag")" ~~ '/nix/*') {
      append "$unit" (unitsShared)
    }
  }
  d_l "units shared" (unitsShared)
}

# systemd generator
# ref: https://www.freedesktop.org/software/systemd/man/latest/systemd.generator.html

proc systemd-link(file, out) {
  echo "systemd link: $file $out"
  if test -e "$file" {
    mkdir -p "$(dirname "$out")"
    ln -s "$file" "$out"
  }
}

proc hook_systemd(; ; ctx, cfg) {
  for unit in (cfg.unitsResolved) {
    var tdir
    if (arrayContains(cfg.replace, unit)) {
      setvar tdir=(ctx.earlyDir)
    } else {
      setvar tdir=(ctx.lateDir)
    }
    systemd-link "$etc/systemd/system/$unit" "$tdir/$unit"
    systemd-link "$etc/systemd/system/$unit.d" "$tdir/$unit.d"
  }
}

proc final(; ; ctx, cfg) {
  if (cfg.enable) {
    var unitsShared = []
    for unit in (cfg.unitsResolved) {
      var frag="$(systemctl show "$unit" -p FragmentPath --value)"
      if ("$(readlink -f "$frag")" ~~ '/nix/*') {
        systemctl disable "$unit"
        systemctl enable "$unit"
      }
    }
  }
}
